<template class='view-frame'>
    <div :show='errormsg==""?"yes":"no"'>
        <div class="icons" id='clunch-browser-extensions-icons' ui-nav-active='listFlag'></div>
        <div class="view">
            <div class="nav">
                <span @click='changeNav("data")' :active='flag=="data"?"yes":"no"'>数据</span>
                <span @click='changeNav("aop")' :active='flag=="aop"?"yes":"no"'>计算前信息</span>
                <span @click='changeNav("series")' :active='flag=="series"?"yes":"no"'>渲染后虚拟DOM</span>
            </div>
            <div ui-json='currentData.data' :active='flag=="data"?"yes":"no"'></div>
            <div ui-json='currentData.render.aop' :active='flag=="aop"?"yes":"no"'></div>
            <div ui-json='currentData.render.series' :active='flag=="series"?"yes":"no"'></div>
        </div>
    </div>
    <div class="error" :show='errormsg==""?"no":"yes"'>
        {{errormsg}}
    </div>
</template>
<script>

    import './styles/style.scss';

    import jsonToTemplate from './libs/jsonToTemplate';

    import getDataFromContentScript from './libs/getDataFromContentScript';
    import error from './libs/error';

    export default {
        data() {
            return {
                currentData: {},
                flag: "data",
                errormsg: "",
                listFlag: ""
            };
        },
        methods: {
            changeNav(flag) {
                this.flag = flag;
            }
        },
        mounted() {

            // 获取数据
            getDataFromContentScript().then(response => {

                try {

                    let iconsDom = document.getElementById("clunch-browser-extensions-icons");

                    if (iconsDom) {
                        iconsDom.innerHTML = jsonToTemplate(response);

                        let iconDoms = iconsDom.getElementsByTagName('div');
                        for (let i = 0; i < iconDoms.length; i++) {
                            iconDoms[i].addEventListener('click', () => {
                                this.currentData = {
                                    data: response[i].target.data,
                                    render: {
                                        aop: response[i].target.render.AOP,
                                        series: response[i].target.render.Series
                                    }
                                };

                                this.listFlag = response[i].name;

                            });
                        }

                        iconDoms[0].click();
                    } else {
                        this.errormsg = error.none;
                    }
                } catch (error) {
                    this.errormsg = '【发生了意外】' + error;
                }

            }).catch(error => {

                this.errormsg = error;

            });


        }
    };
</script>
