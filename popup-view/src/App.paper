<template class='view-frame'>
    <div :show='errormsg==""?"yes":"no"'>
        <div class="icons" id='clunch-browser-extensions-icons' ui-nav-active='listFlag'></div>
        <div class="view">
            <div class="nav">
                <span @click='changeNav("data")' :active='flag=="data"?"yes":"no"'>数据</span>
                <span @click='changeNav("aop")' :active='flag=="aop"?"yes":"no"'>AOP</span>
                <span @click='changeNav("options")' :active='flag=="options"?"yes":"no"'>Options</span>
                <span @click='changeNav("series")' :active='flag=="series"?"yes":"no"'>Series</span>
            </div>
            <div ui-code='currentData.data' :active='flag=="data"?"yes":"no"'></div>
            <div ui-code='currentData.render.aop' :active='flag=="aop"?"yes":"no"'></div>
            <div ui-code='currentData.render.options' :active='flag=="options"?"yes":"no"'></div>
            <div ui-code='currentData.render.series' :active='flag=="series"?"yes":"no"'></div>
        </div>
    </div>
    <div class="error" :show='errormsg==""?"no":"yes"'>
        {{errormsg}}
    </div>
</template>
<script>

    import './styles/style.scss';

    import jsonToTemplate from './libs/jsonToTemplate';
    import jsonToString from './libs/jsonToString';

    import getDataFromContentScript from './libs/getDataFromContentScript';

    export default {
        data() {
            return {
                currentData: {},
                flag: "data",
                errormsg: "",
                listFlag: ""
            };
        },
        methods: {
            changeNav(flag) {
                this.flag = flag;
            }
        },
        mounted() {

            // 获取数据
            getDataFromContentScript().then(response => {

                try {

                    let iconsDom = document.getElementById("clunch-browser-extensions-icons");

                    iconsDom.innerHTML = jsonToTemplate(response);

                    let iconDoms = iconsDom.getElementsByTagName('div');
                    for (let i = 0; i < iconDoms.length; i++) {
                        iconDoms[i].addEventListener('click', () => {
                            this.currentData = {
                                data: jsonToString(response[i].target.data),
                                render: {
                                    aop: jsonToString(response[i].target.render.AOP),
                                    options: jsonToString(response[i].target.render.Options),
                                    series: jsonToString(response[i].target.render.Series)
                                }
                            };

                            this.listFlag = response[i].name;

                        });
                    }

                    iconDoms[0].click();
                } catch (errpr) {
                    this.errormsg = error;
                }

            }).catch(error => {

                this.errormsg = error;

            });


        }
    };
</script>
