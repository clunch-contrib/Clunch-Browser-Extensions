<template class='view-frame'>
    <div>
        <div class="icons" id='clunch-browser-extensions-icons'></div>
        <div class="view">
            <div class="nav">
                <span @click='changeNav("data")' :active='flag=="data"?"yes":"no"'>数据</span>
                <span @click='changeNav("aop")' :active='flag=="aop"?"yes":"no"'>AOP</span>
                <span @click='changeNav("options")' :active='flag=="options"?"yes":"no"'>Options</span>
                <span @click='changeNav("series")' :active='flag=="series"?"yes":"no"'>Series</span>
            </div>
            <div ui-code='currentData.data' :active='flag=="data"?"yes":"no"'></div>
            <div ui-code='currentData.render.aop' :active='flag=="aop"?"yes":"no"'></div>
            <div ui-code='currentData.render.options' :active='flag=="options"?"yes":"no"'></div>
            <div ui-code='currentData.render.series' :active='flag=="series"?"yes":"no"'></div>
        </div>
    </div>
</template>
<script>
    import './styles/style.scss';
    import jsonToTemplate from './libs/jsonToTemplate';
    export default {
        data() {
            return {
                currentData: {},
                flag: "data"
            };
        },
        methods: {
            changeNav(flag) {
                this.flag = flag;
            }
        },
        mounted() {

            chrome.tabs.query({ active: true, currentWindow: true }, tabs => {
                chrome.tabs.sendMessage(tabs[0].id, {
                    cmd: "clunch",
                    value: "获取绘图对象的信息"
                }, response => {

                    console.log(response);

                    let iconsDom = document.getElementById("clunch-browser-extensions-icons");
                    iconsDom.innerHTML = jsonToTemplate(response);

                    let iconDoms = iconsDom.getElementsByTagName('div');
                    for (let i = 0; i < iconDoms.length; i++) {
                        iconDoms[i].addEventListener('click', () => {

                            this.currentData = {
                                data: JSON.stringify(response[i].target.data, null, 2),
                                render: {
                                    aop: JSON.stringify(response[i].target.render.AOP, null, 2),
                                    options: JSON.stringify(response[i].target.render.Options, null, 2),
                                    series: JSON.stringify(response[i].target.render.Series, null, 2)
                                }
                            };

                            for (let j = 0; j < iconDoms.length; i++) {
                                iconDoms[j].setAttribute('active', 'no');
                            }
                            iconDoms[i].setAttribute('active', 'yes');

                        });
                    }

                    iconDoms[0].click();

                });
            });

        }
    };
</script>
